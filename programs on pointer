1)Write a C program to create, initialize and use pointers.

A)#include<stdio.h>
#include<string.h>
int main()
{
    char *ptr[]={"red","blue","white"};
    int l=strlen(*ptr);
    printf("%s\n",ptr[0]);
    printf("%s\n",ptr[1]);
    printf("%s\n",ptr[2]);
    for(int i=0;i<l;i++)
    
    {
        printf("%s ",ptr[i]);
    }
}
2)Write a C program to add two numbers using pointers.
A)#include<stdio.h>
#include<string.h>
int main()
{
    int a=10,b=20;
    int *ptr=&a;
    int *ptr1=&b;
    int c=*ptr+*ptr1;
    printf("%d",c);
}

3)Write a C program to swap two numbers using pointers.
#include<stdio.h>
int main()
{
    int a=10,b=20;
    printf("before swap A values:%d\n",a);
    printf("before swap B values:%d\n",b);
    int *ptr=&a;
    int *ptr1=&b;
    int temp=*ptr;
    *ptr=*ptr1;
    *ptr1=temp;
    printf("the A values:%d\n",a);
    printf("the B values:%d",b);
}

4)Write a C program to input and print array elements using pointer.
A)#include<stdio.h>
#include<string.h>
int main()
{
    int a[]={1,2,3,4,5,6};
    int l=sizeof(a)/sizeof(a[0]);
    int *ptr=&a[0];
    for(int i=0;i<l;i++)
    {
        printf("%d",*(ptr+i));
    }
}

5)Write a C program to copy one array to another using pointers.
A)#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int copy(int s[],int l)
{
    int i=0;
    int *d=(int*)malloc(l*sizeof(int));
    for(i=0;i<l;i++)
    {
        d[i]=s[i];
    }
    for(i=0;i<l;i++)
    {
        printf("the d[i]:%d",d[i]);
    }
}
int main()
{
    int s[]={1,2,3,4,5,6,7};
    int l=sizeof(s)/sizeof(s[0]);
    int (*fptr)(int [],int )=copy;
    fptr(s,l);
}


6)

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
    int i=0;
    int a[]={1,2,3,4,5,6,7};
    int b[]={7,6,5,4,3,2,1};
    
    int l=7;
    for(i=0;i<l;i++)
    {
    printf("%d",a[i]);
    }
    printf("\n");
    for(i=0;i<l;i++)
    {
    printf("%d",b[i]);
}
printf("\n");
    int *p=&a[0];
    int *p1=&b[0];
    for(i=0;i<l;i++)
    {
        int temp=*(p+i);
        *(p+i)=*(p1+i);
        *(p1+i)=temp;
    }
    for(i=0;i<l;i++)
    {
    printf("%d",a[i]);
    }
    printf("\n");
    for(i=0;i<l;i++)
    {
    printf("%d",b[i]);
}
}




7)Write a C program to reverse an array using pointers.

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
  int a[]={1,2,3,4,5,6};
  int l=sizeof(a)/sizeof(a[0]);
  int *p=&a[l-1];
  for(int i=0;i<l;i++)
  {
      printf("%d",*p--);
  }
}


8)Write a C program to search an element in array using pointers.
A)#include<stdio.h>
#include<stdlib.h>
int main()
{
   int l,i=0,s=0,c=0;
   printf("enter the size of an array:");
   scanf("%d",&l);
   int *ptr=(int*)malloc(l*sizeof(int));
   printf("enter the array elements:");
   for(i=0;i<l;i++)
   {
       scanf("%d",(ptr+i));
   }
   printf("enter the searching elements:");
   scanf("%d",&s);
   for(i=0;i<l;i++)
   {
       if(*(ptr+i)==s)
       {
           c++;
       }
   }
  (c)?printf("found:%d",*(ptr+i)):printf("not found");
}

9)Write a C program to access two dimensional array using pointers.
A)
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int r=0,c=0,i=0,j=0;
    printf("enter the no of rows:");
    scanf("%d",&r);
    printf("enter the no of columns:");
    scanf("%d",&c);
    int *ptr=(int*)malloc((r*c)*sizeof(int));
    printf("enter the array elements:");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        scanf("%d",(ptr+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(ptr+i)+j);
    }
    printf("\n");
}
}





10)Write a C program to add two matrix using pointers.
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int r=0,c=0,i=0,j=0;
    printf("enter the no of rows:");
    scanf("%d",&r);
    printf("enter the no of columns:");
    scanf("%d",&c);
    int **ptr=(int**)malloc((r*c)*sizeof(int*));
    int **ptr1=(int**)malloc((r*c)*sizeof(int*));
    int **ptr2=(int**)malloc((r*c)*sizeof(int*));
    for(i=0;i<r;i++)
    {
        *(ptr+i)=(int*)malloc(c*sizeof(int));
    }
    printf("enter the array elements:");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        scanf("%d",*(ptr+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(*(ptr+i)+j));
    }
    printf("\n");
}



for(i=0;i<r;i++)
    {
        *(ptr1+i)=(int*)malloc(c*sizeof(int));
    }
printf("enter the array2 elements:");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        scanf("%d",*(ptr1+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(*(ptr1+i)+j));
    }
    printf("\n");
}




for(i=0;i<r;i++)
    {
        *(ptr2+i)=(int*)malloc(c*sizeof(int));
    }
printf("enter the array elements:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        *(*(ptr2+i)+j)=*(*(ptr+i)+j)+*(*(ptr1+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(*(ptr2+i)+j));
    }
    printf("\n");
}
}


11)Write a C program to multiply two matrix using pointers.
A)
#include<stdio.h>
#include<stdlib.h>
int main()
{
    int r=0,c=0,i=0,j=0;
    printf("enter the no of rows:");
    scanf("%d",&r);
    printf("enter the no of columns:");
    scanf("%d",&c);
    int **ptr=(int**)malloc((r*c)*sizeof(int*));
    int **ptr1=(int**)malloc((r*c)*sizeof(int*));
    int **ptr2=(int**)malloc((r*c)*sizeof(int*));
    for(i=0;i<r;i++)
    {
        *(ptr+i)=(int*)malloc(c*sizeof(int));
    }
    printf("enter the array elements:");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        scanf("%d",*(ptr+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(*(ptr+i)+j));
    }
    printf("\n");
}



for(i=0;i<r;i++)
    {
        *(ptr1+i)=(int*)malloc(c*sizeof(int));
    }
printf("enter the array2 elements:");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        scanf("%d",*(ptr1+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(*(ptr1+i)+j));
    }
    printf("\n");
}




for(i=0;i<r;i++)
    {
        *(ptr2+i)=(int*)malloc(c*sizeof(int));
    }
printf("enter the array elements:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        *(*(ptr2+i)+j)=*(*(ptr+i)+j)**(*(ptr1+i)+j);
    }
}
for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
        printf("%d",*(*(ptr2+i)+j));
    }
    printf("\n");
}
}



12)Write a C program to find length of string using pointers.
A)#include<stdio.h>
int main()
{
    char *ptr="kirankumar";
    int c=0;
    for(int i=0;ptr[i]!='\0';i++)
    {
        c++;
    }
    printf("%d",c);
}



13)Write a C program to copy one string to another using pointers.


#include<stdio.h>
#include<stdlib.h>
int main()
{
    int l,i=0;
    printf("enter the size of array:");
    scanf("%d",&l);
    int *ptr=(int*)malloc(l*sizeof(int));
    printf("enter the array elements:");
    for(i=0;i<l;i++)
    {
        scanf("%d",(ptr+i));
    }
    int *ptr1=(int*)malloc(l*sizeof(int));
    for(i=0;i<l;i++)
    {
        *(ptr1+i)=*(ptr+i);
    }
    for(i=0;i<l;i++)
    {
        printf("%d",*(ptr1+i));
    }
}

14)Write a C program to concatenate two strings using pointers.
A)#include<stdio.h>
int main()
{
    char a[]="kiran";
    char b[]="kumar";
    char *p=(char*)&a;
    char *p1=(char*)&b;
    while(*p)
    {
        p++;
    }
    while(*p1)
    {
        *p=*p1;
        p1++;
        p++;
    }
    *p='\0';
    printf("%s",a);
}




15)Write a C program to compare two strings using pointers.

#include<stdio.h>
int main()
{
    char a[]="kiran";
    char b[]="kiran";
    char *p=(char*)&a;
    char *p1=(char*)&b;
  while(*p==*p1)
  {
      if(*p=='\0' || *p1=='\0')
      
          break;
          p++;
          p1++;

  }
  (*p=='\0' && *p1=='\0')?printf("both are same"):printf("not same");
}



16) Write a C program to find reverse of a string using pointers.
#include<stdio.h>
#include<string.h>
int main()
{
    char a[]="kiran";
    int l=strlen(a);
    char *p=(char*)&a;
    
    printf("%d\n",l);
    for(int i=l-1;i>=0;i--)
    {
        printf("%c",*(p+i));
    }
}


17)Write a C program to sort array using pointers.
A)#include<stdio.h>
#include<string.h>
int main()
{
   int a[]={1,9,11,55,2,99,12};
   int l=sizeof(a)/sizeof(a[0]),i=0,j=0;
for(i=0;i<l;i++)
{
    for(j=i+1;j<l;j++)
    {
        if(a[i]>a[j])
        {
            int temp=a[i];
            a[i]=a[j];
            a[j]=temp;
        }
    }
}
for(i=0;i<l;i++)
{
    printf(" %d ",a[i]);
}
printf("\n");




for(i=0;i<l;i++)
{
    for(j=i+1;j<l;j++)
    {
        if(a[i]<a[j])
        {
            int temp=a[i];
            a[i]=a[j];
            a[j]=temp;
        }
    }
}
for(i=0;i<l;i++)
{
    printf(" %d ",a[i]);
}
}


Write a C program to return multiple value from function using pointers.
A)#include<stdio.h>
#include<string.h>
int fun(int *a,int *b,char *c)
{
    *a=10;
    *b=20;
    *c='k';
    printf("%d %d %c",*a,*b,*c);
    printf("\n");
}
int main()
{
   int a,b;
   char c;
   fun(&a,&b,&c);
   fun(&a,&b,&c);
   printf("%d %d %c",a,b,c);
}
