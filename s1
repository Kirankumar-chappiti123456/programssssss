pointers:
 Write a C program to return multiple value from function using pointers.



#include<stdio.h>
#include<string.h>
int fun(int *a,int *b,char *c)
{
    *a=10,*b=20;
    *c='k';
    printf("%d %d %c",*a,*b,*c);
}
int main()
{
  int a,b;
  char c;
  fun(&a,&b,&c);
}
  

Write a C program to sort array using pointers.

#include<stdio.h>
int main()
{
int a[]={1,343,11,77,812,22,6,4,2,9},i=0,j=0;
int l=sizeof(a)/sizeof(a[0]);
for(i=0;i<l;i++)
{
    for(j=i+1;j<l;j++)
    {
        if(a[i]>a[j])
        {
            int temp=a[i];
            a[i]=a[j];
            a[j]=temp;
        }
    }
    
}
for(i=0;i<l;i++)
{
    printf("%d  ",a[i]);
    
}
}


using pointer:
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
    int l=0,i=0,j=0;
    printf("size of an array:");
    scanf("%d",&l);
int *ptr=(int *)malloc(l*sizeof(int));
for(i=0;i<l;i++)
{
    scanf("%d",(ptr+i));
}
for(i=0;i<l;i++)
{
    for(j=i+1;j<l;j++)
    {
        if(*(ptr+i)>*(ptr+j))
        {
            int temp=*(ptr+i);
            *(ptr+i)=*(ptr+j);
            *(ptr+j)=temp;
        }
    }
}
for(i=0;i<l;i++)
{
    printf("%d ",*(ptr+i));
}
}




 Write a C program to find reverse of a string using pointers.
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
    char *p="kiran";
    int l=strlen(p);
    printf("%d",l);
    for(int i=l-1;i>=0;i--)
    {
        printf("%c",*(p+i));
    }
}


Write a C program to concatenate two strings using pointers.
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
    char a[]="kiran";
    char b[]="kumar";
    char *p=(char*)&a;
    char *p1=(char*)&b;
    while(*p)
    {
        p++;
    }
    while(*p1)
    {
        *p=*p1;
    
        p1++;
        p++;
    }
    *p='\0';
    printf("%s",a);
}


Write a C program to compare two strings using pointers.
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
    char a[]="kiran";
    char b[]="kiran";
    char *p=(char*)&a;
    char *p1=(char*)&b;
    int c=0;
    while(*p==*p1)
    {
    if(*p=='\0' || *p1=='\0')
    
        break;
        p1++;
        p++;
    
    
    }
    (*p=='\0' && *p=='\0')?printf("same"):printf("not same");
}


Write a C program to copy one string to another using pointers.

palindrome are not:

#include<stdio.h>
#include<string.h>
int main()
{
    char a[]="mam";
    int l=strlen(a);
    int i=0,c=0;
    for(i=0;a[i]!='\0';i++)
    {
        if(a[i]!=a[l-i-1])
        {
            c++;
        }
    }
    (c)?printf("not palindrome"):printf("palindrome");
}
