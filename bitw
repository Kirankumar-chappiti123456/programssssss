
#include <stdio.h>
enum result{not_found,found};
int main()
{
    int arr[5]={1,2,3,4,5};
    int i;
    int flag=0;
    for(i=0;i<5;i++)
    {
        if((arr[i]^2)==0)
        {
            flag=found;
            break;
        }
        
    }
    if(flag==found)
        printf("element found:");
    else
        printf("element not found:");
   // printf("Hello World");

    return 0;
}







#include <stdio.h>
enum result{not_found,found};
int main()
{
    int arr[5]={1,2,3,4,5};
    int i;
    int flag=0;
    for(i=0;i<5;i++)
    {
        if((arr[i]^7)==0)
        {
            flag=found;
            break;
        }
        
    }
    (flag==found)?printf("element found:"):printf("element not found:");
}
       



#include <stdio.h>
enum result{not_found,found};
int main()
{
    int arr[5]={1,2,3,4,5};
    int i;
    int element;
    scanf("%d",&element);
    int flag=0;
    for(i=0;i<5;i++)
    {
        if((arr[i]^element)==0)
        {
            flag=found;
            break;
        }
        
    }
    (flag==found)?printf("element found:"):printf("element not found:");
}
       



#include <stdio.h>
//enum result{not_found,found};
int even_odd(int n);//function for checking given number is even or odd
int main()
{
    int n;
    printf("enter a number:");
    scanf("%d",&n);
    even_odd(n);
}
int even_odd(int n)
{
    if(n&1)
        printf("given number is odd");
    else
        printf("given number is even");
}




#include <stdio.h>

int main()
{
   char src1[100]="thundersoft",src2[100],i;
    printf("string 1: %s\n",src1);
    for(i=0;src1[i]!='\0';i++)
    {
        src2[i]=src1[i];
    }
    src2[i]='\0';
    printf("string 2: %s",src2);

    return 0;
}



#include <stdio.h>
#define SIZE 40
void raghu_strcat(char *s1, const char *s2)
{
  (*s1)? raghu_strcat(++s1, s2): (*s1++ = *s2++)? raghu_strcat(s1, s2): 0 ;
}
int main()
{
    char dest[SIZE] = "Welcome to ";
    char src[] = "Thundersoft";

    raghu_strcat(dest, src);

    printf("%s\n",dest);
    printf("%s\n",src);
    return 0;
}
